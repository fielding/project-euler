// Project Euler - projecteuler.net
// Problem 2 - 002.js
// Author: fielding johnston - fielding@justfielding.com
//
// Description:
//
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
//
// Notes: By examining the terms in the sequence, we notice that every third number in the sequence is even, for example:
//
// 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610
// O, O, E, O, O, E, O,  O,  E,  O,  O,  E,   O,   O,   E
//
// starting with any two odd terms in this sequence, we can calculate the following numbers like so:
// x, y, (x + y), (x+ 2y), (2x + 3y), (3x + 5y)
// 1, 1,   (2),     (3),      (5),       (8)
//
// We can see that the even numbers are the sum of the two before them. We can represent them as x, and y. So the even number following x and y would be (x+y). In order to calculate the next 3 numbers we build on this:
// (x + 2y) is the new x and (2x + 3y) is the new y. Meaning that the next Even number will be ( ( x + 2y ) + ( 2x + 3y ) ) or (3x + 5y).
// This is enough data to allow us to itteratively solve the problem. We will itterate through the sequence until y > 4,000,000 determing only every third number and then adding it to our sum variable.

var x = 1;
var y = 1;
var sum = 0;

for (y = 1; y < 4000000;) {
  sum += (x + y);
  tx = x + 2*y;
  ty = 2*x + 3*y;
  x = tx; y = ty;
}

console.log('The sum of the even-valued terms of the fibonacci sequence under 4,000,000 is ' + sum);